Elm.View = Elm.View || {};
Elm.View.make = function (_elm) {
   "use strict";
   _elm.View = _elm.View || {};
   if (_elm.View.values) return _elm.View.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $Issues$About = Elm.Issues.About.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Mobile$View = Elm.Mobile.View.make(_elm),
   $Model = Elm.Model.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm),
   $Update = Elm.Update.make(_elm);
   var _op = {};
   var innerStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "display",_1: "flex"}
                                                   ,{ctor: "_Tuple2",_0: "flex-direction",_1: "column"}
                                                   ,{ctor: "_Tuple2",_0: "align-items",_1: "center"}
                                                   ,{ctor: "_Tuple2",_0: "justify-content",_1: "center"}
                                                   ,{ctor: "_Tuple2",_0: "height",_1: "100%"}
                                                   ,{ctor: "_Tuple2",_0: "text-align",_1: "center"}]));
   var closeHandler = function (address) {    return A2($Html$Events.onClick,address,$Update.ExpandIssue($Model.None));};
   var makeExpandHandler = F2(function (address,issueType) {    return A2($Html$Events.onClick,address,$Update.ExpandIssue(issueType));});
   var makeHoverHandler = F2(function (address,issueType) {    return A2($Html$Events.onMouseOver,address,$Update.HoverIssue(issueType));});
   var issueStyle = F4(function (issueState,issueClass,redify,closingAnimating) {
      var _p0 = function () {
         var _p1 = issueState;
         switch (_p1.ctor)
         {case "MenuItem": return {ctor: "_Tuple4",_0: "visible",_1: "20%",_2: "solid white 2px",_3: true};
            case "Hovered": return {ctor: "_Tuple4",_0: "visible",_1: "20%",_2: "solid white 2px",_3: false};
            case "Selected": return {ctor: "_Tuple4",_0: "visible",_1: "20%",_2: "none",_3: false};
            default: return closingAnimating ? {ctor: "_Tuple4",_0: "visible",_1: "20%",_2: "solid white 2px",_3: true} : {ctor: "_Tuple4"
                                                                                                                          ,_0: "hidden"
                                                                                                                          ,_1: "0%"
                                                                                                                          ,_2: "none"
                                                                                                                          ,_3: false};}
      }();
      var visibility = _p0._0;
      var width = _p0._1;
      var border = _p0._2;
      var redified = _p0._3;
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "width",_1: width}
                                                  ,{ctor: "_Tuple2",_0: "visibility",_1: visibility}
                                                  ,{ctor: "_Tuple2",_0: "height",_1: "100%"}
                                                  ,{ctor: "_Tuple2",_0: "float",_1: "left"}
                                                  ,{ctor: "_Tuple2",_0: "display",_1: "inline-block"}
                                                  ,{ctor: "_Tuple2",_0: "border-left",_1: border}
                                                  ,{ctor: "_Tuple2",_0: "border-right",_1: border}]));
      var classes = $Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "issue",_1: true}
                                                       ,{ctor: "_Tuple2",_0: issueClass,_1: true}
                                                       ,{ctor: "_Tuple2",_0: "redified",_1: redified && redify}]));
      return _U.list([styles,classes]);
   });
   var getIssueState = F2(function (specificIssue,model) {
      return $Model.isShowingMenu(model) ? _U.eq(specificIssue,model.hoveredIssue) ? $Model.Hovered : $Model.MenuItem : _U.eq(specificIssue,
      model.expandedIssue) ? $Model.Selected : $Model.Hidden;
   });
   var viewMenuInner = F2(function (model,issue) {
      var styles = innerStyle;
      var issueDisplay = function () {
         var _p2 = A2(getIssueState,issue.issueType,model);
         switch (_p2.ctor)
         {case "MenuItem": return A2($Html.h1,_U.list([$Html$Attributes.$class("menu-issue-symbol")]),_U.list([$Html.text(issue.symbol)]));
            case "Hovered": return A2($Html.h3,_U.list([$Html$Attributes.$class("menu-issue-title")]),_U.list([$Html.text($String.toUpper(issue.title))]));
            case "Selected": return A2($Html.h3,_U.list([$Html$Attributes.$class("menu-issue-title")]),_U.list([$Html.text($String.toUpper(issue.title))]));
            default: return A2($Html.span,_U.list([]),_U.list([]));}
      }();
      return A2($Html.div,_U.list([styles]),_U.list([issueDisplay]));
   });
   var handlersDependingOnState = F3(function (state,issueType,address) {
      var _p3 = state;
      switch (_p3.ctor)
      {case "Hidden": return _U.list([]);
         case "Selected": return _U.list([closeHandler(address)]);
         default: return _U.list([A2(makeHoverHandler,address,issueType),A2(makeExpandHandler,address,issueType)]);}
   });
   var viewIssueMenuItem = F3(function (address,model,issue) {
      var issueState = A2(getIssueState,issue.issueType,model);
      var attributes = A4(issueStyle,issueState,issue.$class,true,model.closingAnimating);
      var handlers = A3(handlersDependingOnState,issueState,issue.issueType,address);
      return A2($Html.section,A2($List.append,handlers,attributes),_U.list([A2(viewMenuInner,model,issue)]));
   });
   var viewAboutMenuItem = F2(function (address,model) {
      var logoTextClasses = $Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "logo-text",_1: true}
                                                               ,{ctor: "_Tuple2",_0: "mid-screen",_1: $Model.midScreen(model)}]));
      var logoAttributes = F2(function (name,link) {
         return _U.list([$Html$Attributes.$class(name),$Html$Attributes.href(link),$Html$Attributes.target("_blank")]);
      });
      var issueState = A2(getIssueState,$Model.About,model);
      var attributes = A4(issueStyle,issueState,"about",false,model.closingAnimating);
      var handlers = A3(handlersDependingOnState,issueState,$Model.About,address);
      var logoSpaceVisibility = function () {
         var _p4 = issueState;
         if (_p4.ctor === "Selected") {
               return model.closingAnimating ? "0" : "1";
            } else {
               return "0";
            }
      }();
      var logos = A2($Html.div,
      _U.list([$Html$Attributes.$class("logo-space"),$Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "opacity",_1: logoSpaceVisibility}]))]),
      _U.list([A2($Html.a,A2(logoAttributes,"facebook","https://www.facebook.com/otherwheres"),_U.list([]))
              ,A2($Html.a,A2(logoAttributes,"twitter","https://twitter.com/otherwheresmag"),_U.list([]))
              ,A2($Html.a,A2(logoAttributes,"instagram","https://instagram.com/"),_U.list([]))]));
      var subText = function () {
         var _p5 = issueState;
         switch (_p5.ctor)
         {case "MenuItem": return _U.list([A2($Html.p,_U.list([]),_U.list([$Html.text("{ mostly } true")]))
                                          ,A2($Html.p,_U.list([]),_U.list([$Html.text("stories")]))]);
            case "Hovered": return _U.list([A2($Html.p,_U.list([]),_U.list([$Html.text("who are we")]))]);
            case "Selected": return _U.list([A2($Html.p,_U.list([]),_U.list([$Html.text("who are we")]))]);
            default: return _U.list([A2($Html.p,_U.list([]),_U.list([$Html.text("{ mostly } true")]))
                                    ,A2($Html.p,_U.list([]),_U.list([$Html.text("stories")]))]);}
      }();
      return A2($Html.section,
      A2($List.append,handlers,attributes),
      _U.list([A2($Html.div,
      _U.list([innerStyle]),
      _U.list([A2($Html.div,_U.list([$Html$Attributes.$class("red-logo")]),_U.list([logos]))
              ,A2($Html.div,_U.list([logoTextClasses]),_U.list([$Html.text("OTHERWHERES")]))
              ,A2($Html.div,_U.list([$Html$Attributes.$class("tag-line-text")]),subText)]))]));
   });
   var issueContentAttributes = function () {
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "width",_1: "80%"}
                                                  ,{ctor: "_Tuple2",_0: "height",_1: "100%"}
                                                  ,{ctor: "_Tuple2",_0: "position",_1: "absolute"}
                                                  ,{ctor: "_Tuple2",_0: "display",_1: "inline-block"}
                                                  ,{ctor: "_Tuple2",_0: "float",_1: "right"}]));
      return _U.list([$Html$Attributes.$class("issue-content"),styles]);
   }();
   var issueImageView = F3(function (images,displayImage,handler) {
      var imageList = _U.list([A2($Html.img,_U.list([$Html$Attributes.src(images.left),$Html$Attributes.$class("small"),handler($Model.Left)]),_U.list([]))
                              ,A2($Html.img,_U.list([$Html$Attributes.src(images.middle),$Html$Attributes.$class("small"),handler($Model.Middle)]),_U.list([]))
                              ,A2($Html.img,_U.list([$Html$Attributes.src(images.right),$Html$Attributes.$class("small"),handler($Model.Right)]),_U.list([]))]);
      var bigImageConstructor = function (source) {
         return A2($Html.div,
         _U.list([$Html$Attributes.$class("big-image-center-helper redified")]),
         _U.list([A2($Html.img,_U.list([$Html$Attributes.src(source),$Html$Attributes.$class("big-image"),handler($Model.All)]),_U.list([]))]));
      };
      var allImages = function () {
         var _p6 = displayImage;
         switch (_p6.ctor)
         {case "All": return imageList;
            case "Left": return A2(F2(function (x,y) {    return A2($List._op["::"],x,y);}),bigImageConstructor(images.left),imageList);
            case "Middle": return A2(F2(function (x,y) {    return A2($List._op["::"],x,y);}),bigImageConstructor(images.middle),imageList);
            default: return A2(F2(function (x,y) {    return A2($List._op["::"],x,y);}),bigImageConstructor(images.right),imageList);}
      }();
      return A2($Html.div,_U.list([$Html$Attributes.$class("images")]),allImages);
   });
   var tictailHref = function (issue) {    return _U.list([$Html$Attributes.href(issue.actionButtonHref),$Html$Attributes.target("_blank")]);};
   var actionButton = function (issue) {
      var isDisaster = function () {    var _p7 = issue.issueType;if (_p7.ctor === "Disaster") {    return true;} else {    return false;}}();
      var classes = $Html$Attributes.classList(_U.list([{ctor: "_Tuple2",_0: "issue-content-action-button",_1: true}
                                                       ,{ctor: "_Tuple2",_0: "disaster",_1: isDisaster}]));
      return A2($Html.a,tictailHref(issue),_U.list([A2($Html.div,_U.list([classes]),_U.list([$Html.text($String.toUpper(issue.actionButtonText))]))]));
   };
   var viewFromIssue = F4(function (displayImage,imgHandler,closeHandler,issue) {
      var closeButton = function () {
         var _p8 = displayImage;
         if (_p8.ctor === "All") {
               return A2($Html.div,_U.list([$Html$Attributes.$class("close-button"),closeHandler]),_U.list([]));
            } else {
               return A2($Html.div,_U.list([$Html$Attributes.$class("minimize-button"),imgHandler($Model.All)]),_U.list([]));
            }
      }();
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("issue-content")]),
      _U.list([closeButton
              ,A2($Html.div,_U.list([$Html$Attributes.$class("red-logo")]),_U.list([]))
              ,A2($Html.h3,
              _U.list([$Html$Attributes.$class("issue-number")]),
              _U.list([$Html.text(A2($Basics._op["++"],"VOLUME ",A2($Basics._op["++"],issue.symbol,":")))]))
              ,A2($Html.h3,_U.list([$Html$Attributes.$class("issue-tagline")]),_U.list([$Html.text($String.toUpper(issue.tagline))]))
              ,A3(issueImageView,issue.images,displayImage,imgHandler)
              ,A2($Html.div,_U.list([$Html$Attributes.$class("issue-quote")]),_U.list([$Html.text(issue.quote)]))
              ,A2($Html.div,
              _U.list([$Html$Attributes.$class("issue-quote-credit")]),
              _U.list([$Html.text(A2($Basics._op["++"],"From ",A2($Basics._op["++"],issue.quoteStory,A2($Basics._op["++"]," by ",issue.quoteCredit))))]))
              ,actionButton(issue)]));
   });
   var viewSelectedIssue = F2(function (address,model) {
      var _p9 = model.expandedIssue;
      switch (_p9.ctor)
      {case "About": return A2($Issues$About.view,address,model);
         case "None": return A2($Html.span,_U.list([]),_U.list([]));
         default: return A4(viewFromIssue,
           model.displayImage,
           function (displayImage) {
              return A2($Html$Events.onClick,address,$Update.ExpandImage(displayImage));
           },
           closeHandler(address),
           $Model.issueFromIssueType(_p9));}
   });
   var viewMenu = F2(function (address,model) {
      var issueMenuItems = A2($List.map,A2(viewIssueMenuItem,address,model),model.issues);
      var aboutMenu = A2(viewAboutMenuItem,address,model);
      return A2($List._op["::"],aboutMenu,issueMenuItems);
   });
   var view = F2(function (address,model) {
      var _p10 = model.screen;
      if (_p10.ctor === "TooSmall") {
            return $Mobile$View.view;
         } else {
            return A2($Html.div,
            _U.list([$Html$Attributes.id("wrapper")]),
            A2($List.append,A2(viewMenu,address,model),_U.list([A2(viewSelectedIssue,address,model)])));
         }
   });
   return _elm.View.values = {_op: _op
                             ,view: view
                             ,viewMenu: viewMenu
                             ,viewSelectedIssue: viewSelectedIssue
                             ,viewFromIssue: viewFromIssue
                             ,actionButton: actionButton
                             ,tictailHref: tictailHref
                             ,issueImageView: issueImageView
                             ,issueContentAttributes: issueContentAttributes
                             ,viewAboutMenuItem: viewAboutMenuItem
                             ,handlersDependingOnState: handlersDependingOnState
                             ,getIssueState: getIssueState
                             ,issueStyle: issueStyle
                             ,makeHoverHandler: makeHoverHandler
                             ,makeExpandHandler: makeExpandHandler
                             ,closeHandler: closeHandler
                             ,viewIssueMenuItem: viewIssueMenuItem
                             ,innerStyle: innerStyle
                             ,viewMenuInner: viewMenuInner};
};