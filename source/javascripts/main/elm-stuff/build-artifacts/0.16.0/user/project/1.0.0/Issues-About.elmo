Elm.Issues = Elm.Issues || {};
Elm.Issues.About = Elm.Issues.About || {};
Elm.Issues.About.make = function (_elm) {
   "use strict";
   _elm.Issues = _elm.Issues || {};
   _elm.Issues.About = _elm.Issues.About || {};
   if (_elm.Issues.About.values) return _elm.Issues.About.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Array = Elm.Array.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var grey = "#979797";
   var viewLine = function () {
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "border",_1: A2($Basics._op["++"],"1px solid ",grey)}
                                                  ,{ctor: "_Tuple2",_0: "height",_1: "0px"}
                                                  ,{ctor: "_Tuple2",_0: "width",_1: "80%"}
                                                  ,{ctor: "_Tuple2",_0: "margin",_1: "0 auto"}]));
      return A2($Html.div,_U.list([styles]),_U.list([]));
   }();
   var viewChangingText = function (currentText) {
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "padding-top",_1: "36px"}
                                                  ,{ctor: "_Tuple2",_0: "font-size",_1: "26px"}
                                                  ,{ctor: "_Tuple2",_0: "padding-bottom",_1: "8px"}]));
      return A2($Html.h3,_U.list([styles]),_U.list([$Html.text($String.toUpper(currentText))]));
   };
   var viewLiteIs = function () {
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "padding-top",_1: "36px"},{ctor: "_Tuple2",_0: "font-size",_1: "26px"}]));
      return A2($Html.span,_U.list([styles,$Html$Attributes.$class("lite-italic")]),_U.list([$Html.text("IS")]));
   }();
   var viewHeader = function () {
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "padding-top",_1: "120px"}]));
      return A2($Html.h1,_U.list([styles]),_U.list([$Html.text("OTHERWHERES")]));
   }();
   var view = F2(function (address,model) {
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "background-image",_1: "url(assets/issues/about/bg.png)"}
                                                  ,{ctor: "_Tuple2",_0: "height",_1: "100%"}
                                                  ,{ctor: "_Tuple2",_0: "text-align",_1: "center"}
                                                  ,{ctor: "_Tuple2",_0: "color",_1: "white"}]));
      var currentPhrase = A2($Maybe.withDefault,"",A2($Array.get,model.currentPhraseIndex,model.phrases));
      return A2($Html.div,_U.list([styles]),_U.list([viewHeader,viewLiteIs,viewChangingText(currentPhrase),viewLine]));
   });
   return _elm.Issues.About.values = {_op: _op
                                     ,view: view
                                     ,viewHeader: viewHeader
                                     ,viewLiteIs: viewLiteIs
                                     ,viewChangingText: viewChangingText
                                     ,viewLine: viewLine
                                     ,grey: grey};
};