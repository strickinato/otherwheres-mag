Elm.Model = Elm.Model || {};
Elm.Model.make = function (_elm) {
   "use strict";
   _elm.Model = _elm.Model || {};
   if (_elm.Model.values) return _elm.Model.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Array = Elm.Array.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Util = Elm.Util.make(_elm);
   var _op = {};
   var isShowingMenu = function (model) {    var _p0 = model.expandedIssueId;if (_p0.ctor === "Just") {    return false;} else {    return true;}};
   var volume2 = F2(function (id,color) {    return {title: "Travel",symbol: "II",id: id,backgroundColor: color};});
   var volume1 = {title: "Truth or Fiction",symbol: "I",id: 1,backgroundColor: "red"};
   var findSelectedIssue = function (model) {
      return $List.head(A2($List.filter,function (issue) {    return A2($Util._op["?=="],issue.id,model.expandedIssueId);},model.issues));
   };
   var allIssues = _U.list([volume1,A2(volume2,2,"green"),A2(volume2,3,"yellow"),A2(volume2,4,"orange"),A2(volume2,5,"black")]);
   var otherwheresPhrases = $Array.fromList(_U.list(["artsy fartsy","ready to pop"]));
   var Issue = F4(function (a,b,c,d) {    return {title: a,symbol: b,id: c,backgroundColor: d};});
   var initialAnimation = {prevClockTime: 0.0,elapsedTime: 0.0};
   var AnimationState = F2(function (a,b) {    return {prevClockTime: a,elapsedTime: b};});
   var init = {issues: allIssues,expandedIssueId: $Maybe.Nothing,phraseAnimationState: initialAnimation,currentPhraseIndex: 0,phrases: otherwheresPhrases};
   var Model = F5(function (a,b,c,d,e) {    return {issues: a,expandedIssueId: b,phraseAnimationState: c,currentPhraseIndex: d,phrases: e};});
   return _elm.Model.values = {_op: _op
                              ,Model: Model
                              ,init: init
                              ,AnimationState: AnimationState
                              ,initialAnimation: initialAnimation
                              ,Issue: Issue
                              ,otherwheresPhrases: otherwheresPhrases
                              ,allIssues: allIssues
                              ,findSelectedIssue: findSelectedIssue
                              ,volume1: volume1
                              ,volume2: volume2
                              ,isShowingMenu: isShowingMenu};
};