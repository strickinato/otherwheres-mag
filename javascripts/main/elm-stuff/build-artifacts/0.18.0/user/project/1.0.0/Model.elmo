var _user$project$Model$isShowingMenu = function (model) {
	var _p0 = model.expandedIssue;
	if (_p0.ctor === 'None') {
		return true;
	} else {
		return false;
	}
};
var _user$project$Model$currentPhrase = function (model) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		'',
		A2(_elm_lang$core$Array$get, model.currentPhraseIndex, model.phrases));
};
var _user$project$Model$otherwheresPhrases = _elm_lang$core$Array$fromList(
	{
		ctor: '::',
		_0: 'mostly true',
		_1: {
			ctor: '::',
			_0: 'hella literary',
			_1: {
				ctor: '::',
				_0: 'awkward for your mom to read',
				_1: {
					ctor: '::',
					_0: 'delightfully tacky yet unrefined',
					_1: {
						ctor: '::',
						_0: 'memories unraveling at the seams',
						_1: {
							ctor: '::',
							_0: 'artsy fartsy',
							_1: {
								ctor: '::',
								_0: 'Capri-Sun and orange slices after the game',
								_1: {
									ctor: '::',
									_0: 'impressive coffee table material',
									_1: {
										ctor: '::',
										_0: 'a place to write the things we sometimes cannot say',
										_1: {
											ctor: '::',
											_0: 'a zine you can believe in',
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$Model$resetTime = function (currentAnimationState) {
	return {prevClockTime: currentAnimationState.prevClockTime, elapsedTime: 0 - 2.0};
};
var _user$project$Model$initialAnimation = {prevClockTime: 0.0, elapsedTime: 0 - 2.0};
var _user$project$Model$midScreen = function (model) {
	var _p1 = model.screen;
	if (_p1.ctor === 'Medium') {
		return true;
	} else {
		return false;
	}
};
var _user$project$Model$Model = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return {issues: a, expandedIssue: b, hoveredIssue: c, phraseAnimationState: d, currentPhraseIndex: e, phrases: f, closingAnimating: g, closingAnimationState: h, displayImage: i, screen: j, history: k};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Model$AnimationState = F2(
	function (a, b) {
		return {prevClockTime: a, elapsedTime: b};
	});
var _user$project$Model$TooSmall = {ctor: 'TooSmall'};
var _user$project$Model$Medium = {ctor: 'Medium'};
var _user$project$Model$Big = {ctor: 'Big'};
