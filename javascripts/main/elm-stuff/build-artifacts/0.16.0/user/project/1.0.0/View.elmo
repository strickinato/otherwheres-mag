Elm.View = Elm.View || {};
Elm.View.make = function (_elm) {
   "use strict";
   _elm.View = _elm.View || {};
   if (_elm.View.values) return _elm.View.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $Issues$About = Elm.Issues.About.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Model = Elm.Model.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Update = Elm.Update.make(_elm);
   var _op = {};
   var isSelectedIssue = F2(function (issueId,maybeSelectedId) {    return _U.eq(A2($Maybe.withDefault,0,maybeSelectedId),issueId);});
   var viewIssueMenuItem = F3(function (address,model,issue) {
      var expandHandler = A2($Html$Events.onClick,address,$Update.ExpandIssue($Maybe.Just(issue.id)));
      var isExpanded = A2(F2(function (x,y) {    return x || y;}),$Model.isShowingMenu(model),A2(isSelectedIssue,issue.id,model.expandedIssueId));
      var _p0 = isExpanded ? {ctor: "_Tuple2",_0: "visible",_1: "20%"} : {ctor: "_Tuple2",_0: "hidden",_1: "0%"};
      var visibility = _p0._0;
      var width = _p0._1;
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "width",_1: width}
                                                  ,{ctor: "_Tuple2",_0: "visibility",_1: visibility}
                                                  ,{ctor: "_Tuple2",_0: "height",_1: "100%"}
                                                  ,{ctor: "_Tuple2",_0: "display",_1: "inline-block"}
                                                  ,{ctor: "_Tuple2"
                                                   ,_0: "background-image"
                                                   ,_1: A2($Basics._op["++"],"url(",A2($Basics._op["++"],issue.backgroundAsset,")"))}
                                                  ,{ctor: "_Tuple2",_0: "background-repeat",_1: "no-repeat"}
                                                  ,{ctor: "_Tuple2",_0: "background-position",_1: "center"}]));
      return A2($Html.section,_U.list([$Html$Attributes.$class("issue"),styles,expandHandler]),_U.list([$Html.text(issue.symbol)]));
   });
   var viewIssueMenu = F2(function (address,model) {    return A2($List.map,A2(viewIssueMenuItem,address,model),model.issues);});
   var closeButton = function (handler) {    return A2($Html.span,_U.list([handler]),_U.list([$Html.text("X")]));};
   var viewIssueContent = F2(function (address,issueView) {
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "width",_1: "80%"}
                                                  ,{ctor: "_Tuple2",_0: "height",_1: "100%"}
                                                  ,{ctor: "_Tuple2",_0: "position",_1: "absolute"}
                                                  ,{ctor: "_Tuple2",_0: "display",_1: "inline-block"}
                                                  ,{ctor: "_Tuple2",_0: "float",_1: "right"}
                                                  ,{ctor: "_Tuple2",_0: "background-color",_1: "green"}]));
      var closeHandler = A2($Html$Events.onClick,address,$Update.ExpandIssue($Maybe.Nothing));
      return A2($Html.div,_U.list([$Html$Attributes.$class("issue-content"),styles]),_U.list([closeButton(closeHandler),issueView]));
   });
   var viewSelectedIssue = F2(function (address,model) {
      var _p1 = model.expandedIssueId;
      if (_p1.ctor === "Just") {
            switch (_p1._0)
            {case 1: return A2(viewIssueContent,address,A2($Issues$About.view,address,model));
               case 2: return A2(viewIssueContent,address,$Html.text("HI!"));
               default: return A2($Html.span,_U.list([]),_U.list([]));}
         } else {
            return A2($Html.span,_U.list([]),_U.list([]));
         }
   });
   var view = F2(function (address,model) {
      var styles = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "width",_1: "100%"},{ctor: "_Tuple2",_0: "height",_1: "100%"}]));
      return A2($Html.div,
      _U.list([$Html$Attributes.id("wrapper"),styles]),
      A2($List.append,A2(viewIssueMenu,address,model),_U.list([A2(viewSelectedIssue,address,model)])));
   });
   return _elm.View.values = {_op: _op
                             ,view: view
                             ,viewSelectedIssue: viewSelectedIssue
                             ,viewIssueContent: viewIssueContent
                             ,closeButton: closeButton
                             ,viewIssueMenu: viewIssueMenu
                             ,isSelectedIssue: isSelectedIssue
                             ,viewIssueMenuItem: viewIssueMenuItem};
};